
// C program to print all permutations with duplicates allowed
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

#define knoten 4



/* Function to swap values at two pointers */
void swap(char *x, char *y)
{
	char temp;
	temp = *x;
	*x = *y;
	*y = temp;
}

/* Function to print permutations of string
   This function takes three parameters:
   1. String
   2. Starting index of the string
   3. Ending index of the string. */

void permute(char *a, int l, int r,char**feld)
{
	int i,j;
	if (l == r){
	static int x=0;

		printf("a=%s",a);

		for(j=0;j<strlen(a);j++){
			feld[x][j]=*(a+j);
		}
		printf("feld=%s\n",feld[x]);

	}else{
		for (i = l; i <= r; i++)
		{
			swap((a+l), (a+i));
			permute(a, l+1, r,feld);
			swap((a+l), (a+i)); //backtrack
		}
	}
}


/* Driver program to test above functions */




void varianten1(){
	char* ursp=NULL;
	int i;
	int bin=1;
printf("knoten=%i\n",knoten);

	//knotenpunkte 1-4
	ursp=(char*)malloc(knoten*sizeof(char));

	for(i=1;i<=knoten;i++){
		*(ursp+i-1)=i+48;
	//	printf("%c\n",*(ursp+i));
	}

printf("s=%s\n",ursp);

	//anzahl an möglichkeiten die knoten zu kombinieren (binomialkoeffizient)
	for(i=1;i<knoten+1;i++){
		bin=bin*i;
	}
	printf("bin=%i\n",bin);

	//platz für die möglichkeiten
	char ** feld=NULL;
	//reserviere zeilen Zeilenanzahl=binomialkoeffizient
	feld=(char**)malloc(sizeof(char*)*bin);
	//reserviere spalten spaltenanzahl=knoten +1 für string ende (<=)
	for(i=0;i<=knoten;i++){
		feld[i]=(char*)malloc(sizeof(char)*knoten);
		feld[i][knoten]=0;
	}
	permute(ursp,0,knoten-1,feld);
}




int main()
{



	varianten1();





	return 0;
}
